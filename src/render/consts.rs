use once_cell::sync::Lazy;
/// This is basically just a hack to enable all KHR device extensions (by unioning this with `device.supported_extensions()`).
/// I separated it into it's own file because it is huge.
pub static ALL_KHR_DEVICE_EXTENSIONS: Lazy<vulkano::device::DeviceExtensions> =
    Lazy::new(|| vulkano::device::DeviceExtensions {
        khr_16bit_storage: true,
        khr_8bit_storage: true,
        khr_acceleration_structure: true,
        khr_bind_memory2: true,
        khr_buffer_device_address: true,
        khr_copy_commands2: true,
        khr_create_renderpass2: true,
        khr_dedicated_allocation: true,
        khr_deferred_host_operations: true,
        khr_depth_stencil_resolve: true,
        khr_descriptor_update_template: true,
        khr_device_group: true,
        khr_display_swapchain: true,
        khr_draw_indirect_count: true,
        khr_driver_properties: true,
        khr_dynamic_rendering: true,
        khr_external_fence: true,
        khr_external_fence_fd: true,
        khr_external_fence_win32: true,
        khr_external_memory: true,
        khr_external_memory_fd: true,
        khr_external_memory_win32: true,
        khr_external_semaphore: true,
        khr_external_semaphore_fd: true,
        khr_external_semaphore_win32: true,
        khr_format_feature_flags2: true,
        khr_fragment_shader_barycentric: true,
        khr_fragment_shading_rate: true,
        khr_get_memory_requirements2: true,
        khr_global_priority: true,
        khr_image_format_list: true,
        khr_imageless_framebuffer: true,
        khr_incremental_present: true,
        khr_maintenance1: true,
        khr_maintenance2: true,
        khr_maintenance3: true,
        khr_maintenance4: true,
        khr_map_memory2: true,
        khr_multiview: true,
        khr_performance_query: true,
        khr_pipeline_executable_properties: true,
        khr_pipeline_library: true,
        khr_portability_subset: true,
        khr_present_id: true,
        khr_present_wait: true,
        khr_push_descriptor: true,
        khr_relaxed_block_layout: true,
        khr_sampler_mirror_clamp_to_edge: true,
        khr_sampler_ycbcr_conversion: true,
        khr_separate_depth_stencil_layouts: true,
        khr_shader_atomic_int64: true,
        khr_shader_clock: true,
        khr_shader_draw_parameters: true,
        khr_shader_float16_int8: true,
        khr_shader_float_controls: true,
        khr_shader_integer_dot_product: true,
        khr_shader_non_semantic_info: true,
        khr_shader_subgroup_extended_types: true,
        khr_shader_subgroup_uniform_control_flow: true,
        khr_shader_terminate_invocation: true,
        khr_shared_presentable_image: true,
        khr_spirv_1_4: true,
        khr_storage_buffer_storage_class: true,
        khr_swapchain: true,
        khr_swapchain_mutable_format: true,
        khr_synchronization2: true,
        khr_timeline_semaphore: true,
        khr_uniform_buffer_standard_layout: true,
        khr_variable_pointers: true,
        khr_vulkan_memory_model: true,
        khr_win32_keyed_mutex: true,
        khr_workgroup_memory_explicit_layout: true,
        khr_zero_initialize_workgroup_memory: true,
        ..Default::default()
    });
